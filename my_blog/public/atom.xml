<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fxj</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fanming.shop/"/>
  <updated>2018-01-23T03:43:01.530Z</updated>
  <id>http://fanming.shop/</id>
  
  <author>
    <name>FanMing</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>centos7安装nagios监控服务</title>
    <link href="http://fanming.shop/2018/01/23/centos_install_nagios/"/>
    <id>http://fanming.shop/2018/01/23/centos_install_nagios/</id>
    <published>2018-01-23T03:43:01.530Z</published>
    <updated>2018-01-23T03:43:01.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-nagios简介"><a href="#1-nagios简介" class="headerlink" title="1. nagios简介"></a><strong>1. nagios简介</strong></h2><pre><code>Nagios是一款开源的免费网络监视工具，能有效监控Windows、Linux和Unix的主机状态，交换机路由器等网络设置，打印机等。在系统或服务状态异常时发出邮件或短信报警第一时间通知网站运维人员，在状态恢复后发出正常的邮件或短信通知。Nagios 可以监控的功能有：1、监控网络服务（SMTP、POP3、HTTP、NNTP、PING等）； 2、监控主机资源（处理器负荷、磁盘利用率等）；3、简单地插件设计使得用户可以方便地扩展自己服务的检测方法；4、并行服务检查机制；5、具备定义网络分层结构的能力，用&quot;parent&quot;主机定义来表达网络主机间的关系，这种关系可被用来发现和明晰主机宕机或不可达状态；6、当服务或主机问题产生与解决时将告警发送给联系人（通过EMail、短信、用户定义方式）；7、具备定义事件句柄功能，它可以在主机或服务的事件发生时获取更多问题定位；8、自动的日志回滚；9、可以支持并实现对主机的冗余监控；10、可选的WEB界面用于查看当前的网络状态、通知和故障历史、日志文件等。</code></pre><h2 id="2-安装Nagios基础支持套件和添加用户"><a href="#2-安装Nagios基础支持套件和添加用户" class="headerlink" title="2. 安装Nagios基础支持套件和添加用户"></a><strong>2. 安装Nagios基础支持套件和添加用户</strong></h2><p>1).安装套件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc glibc glibc-common gd gd-devel xinetd openssl-devel</span><br></pre></td></tr></table></figure></p><p>2).创建nagios用户和用户组(先进行该步骤，不然编译nagios时会报错)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">useradd -s /sbin/nologin nagios   #创建nagios用户，设置该用户无法登录</span><br><span class="line">mkdir /usr/local/nagios   </span><br><span class="line">chown -R nagios.nagios /usr/local/nagios   #设置目录权限</span><br></pre></td></tr></table></figure></p><p>3).安装httpd和php<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yum install httpd*    ##安装Web服务器Apache相关服务,nagios提供了web监控界面，通过web界面可以看到被监控主机运行状态</span><br><span class="line">yum install php*      ##安装PHP相关服务</span><br></pre></td></tr></table></figure></p><h2 id="3-下载并编译安装Nagios"><a href="#3-下载并编译安装Nagios" class="headerlink" title="3. 下载并编译安装Nagios"></a><strong>3. 下载并编译安装Nagios</strong></h2><p>1).下载并解压nagios<br>可以前往 <a href="https://www.nagios.org" target="_blank" rel="noopener">https://www.nagios.org</a> 获取最新的软件包，这里以 Nagios 核心 3.4.3 为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://assets.nagios.com/downloads/nagioscore/releases/nagios-3.4.3.tar.gz </span><br><span class="line">tar -zxvf nagios-3.4.3.tar.gz </span><br><span class="line">cd nagios   #编译安装nagios</span><br></pre></td></tr></table></figure></p><p>2).编译安装nagios<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nagios</span><br><span class="line">make all   ##中间如有选择，直接A</span><br><span class="line">make install    ##安装主程序，CGI和HTML文件</span><br><span class="line">make install-init   ##在/etc/rc.d/init.d安装启动脚本</span><br><span class="line">make install-config    ##安装示例配置文件</span><br><span class="line">make install-commandmode    ##配置目录权限</span><br></pre></td></tr></table></figure></p><p>3).配置自启动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add nagios   ##增加nagios为系统服务</span><br><span class="line">chkconfig --level 35 nagios on  ##设置nagios在运行级别3、5的情况下为开启状态</span><br><span class="line">chkconfig --list nagios   ##列出nagios服务设置详情</span><br></pre></td></tr></table></figure></p><p>4).验证程序是否配置正确<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg</span><br></pre></td></tr></table></figure></p><p><img src="http://img.blog.csdn.net/20180123112026072?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><h2 id="4-安装Nagios插件"><a href="#4-安装Nagios插件" class="headerlink" title="4. 安装Nagios插件"></a><strong>4. 安装Nagios插件</strong></h2><p>1).下载nagios-plugins<br>可以前往 <a href="https://www.nagios.org" target="_blank" rel="noopener">https://www.nagios.org</a> 获取最新的软件包，这里以 插件 2.0.3 为例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://nagios-plugins.org/download/nagios-plugins-2.0.3.tar.gz  ##下载nagios-plugins</span><br><span class="line">tar -zxvf nagios-plugins-2.0.3.tar.gz   ##解压nagios-plugins</span><br><span class="line">cd nagios-plugins-2.0.3</span><br></pre></td></tr></table></figure></p><p>2).编译安装nagios-plugins</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr/local/nagios</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>3).下载nagios-snmp-plugins</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://nagios.manubulon.com/nagios-snmp-plugins.1.1.1.tgz </span><br><span class="line">tar -zxvf nagios-snmp-plugins.1.1.1.tgz </span><br><span class="line">cd nagios-plugins-2.0.3/</span><br></pre></td></tr></table></figure><p>4).编译安装nagios-snmp-plugins</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install perl-CPAN   ##yum安装Perl-CPAN，CPAN是Perl软件收藏库，收集了大量有用的Perl模块(modules)及其相关的文件。nagios-snmp-plugins是一套用Perl编写的通过SNMP方式监控主机的插件程序，因此需要先安装perl-CPAN</span><br><span class="line">perl -MCPAN -e shell</span><br><span class="line">cpan[1]&gt; install Net::SNMP</span><br></pre></td></tr></table></figure><h2 id="5-配置httpd"><a href="#5-配置httpd" class="headerlink" title="5. 配置httpd"></a><strong>5. 配置httpd</strong></h2><p> 1).    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/httpd/conf/httpd.conf</span><br><span class="line">将</span><br><span class="line">User apache </span><br><span class="line">Group apache</span><br></pre></td></tr></table></figure><pre><code>修改为如下内容：</code></pre><p><img src="http://img.blog.csdn.net/20180123104741286?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p><p>2).在如下位置添加index.php<br><img src="http://img.blog.csdn.net/20180123104930999?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="fanming.shop"></p><p>3).配置nagios.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nagios/       #nagios 解压后的目录</span><br><span class="line">make install-webconf    ##安装nagios的web接口,会在/etc/httpd/conf.d目录中创建nagios.conf文件</span><br><span class="line">vim /etc/httpd/conf.d/nagios.conf</span><br></pre></td></tr></table></figure></p><pre><code>将22行和39行附近的htpasswd.user改为htpasswd（注:也可不进行更改，但在下部中要加全路径名）</code></pre><p><img src="http://img.blog.csdn.net/20180123105742740?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="fanming.shop"></p><p>4).创建nagios验证文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">htpasswd -c /usr/local/nagios/etc/htpasswd admin  ##创建nagios登录web界面的用户名和密码</span><br><span class="line">cat /usr/local/nagios/etc/htpasswd    ##查看认证文件的内容</span><br></pre></td></tr></table></figure></p><p>5).关闭SELinux和防火墙：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a、临时关闭（不用重启机器）：</span><br><span class="line">setenforce 0    ##设置SELinux 成为permissive模式  （关闭SELinux）</span><br><span class="line">setenforce 1    ##设置SELinux 成为enforcing模式    (开启SELinux）</span><br><span class="line">b、修改配置文件需要重启机器：</span><br><span class="line">vi /etc/selinux/config</span><br><span class="line">将SELINUX=enforcing 改为SELINUX=disabled</span><br><span class="line">需重启机器</span><br><span class="line">c、可自己做策略开放相应端口，这里我直接关闭:</span><br><span class="line">systemctl status firewalld.service       ##查看防火墙状态</span><br><span class="line">systemctl stop firewalld.service         ##关闭防火墙</span><br></pre></td></tr></table></figure></p><p>6).启用服务并进入nagios<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start httpd.service</span><br><span class="line">systemctl start snmpd.service</span><br><span class="line">systemctl start nagios.service</span><br></pre></td></tr></table></figure></p><p><strong>至此，就可以访问<a href="http://localhost/nagios" target="_blank" rel="noopener">http://localhost/nagios</a> 访问web界面了</strong> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-nagios简介&quot;&gt;&lt;a href=&quot;#1-nagios简介&quot; class=&quot;headerlink&quot; title=&quot;1. nagios简介&quot;&gt;&lt;/a&gt;&lt;strong&gt;1. nagios简介&lt;/strong&gt;&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;Nagios是一款开源
      
    
    </summary>
    
      <category term="Linux" scheme="http://fanming.shop/categories/Linux/"/>
    
    
      <category term="nagios" scheme="http://fanming.shop/tags/nagios/"/>
    
  </entry>
  
  <entry>
    <title>Python和微信之获取好友昵称并制作wordcloud</title>
    <link href="http://fanming.shop/2018/01/16/hexo_config/"/>
    <id>http://fanming.shop/2018/01/16/hexo_config/</id>
    <published>2018-01-16T09:49:54.921Z</published>
    <updated>2018-01-16T09:49:54.897Z</updated>
    
    <content type="html"><![CDATA[<p>最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">coding:utf-8</span><br><span class="line">微信好友昵称WordCloud</span><br><span class="line">import itchat</span><br><span class="line">import re</span><br><span class="line">import os</span><br><span class="line">import matplotlib.pyplot as plt</span><br><span class="line">from wordcloud import WordCloud, ImageColorGenerator</span><br><span class="line">import numpy as np</span><br><span class="line">import PIL.Image as Image</span><br><span class="line">import jieba</span><br><span class="line">import time</span><br><span class="line">#以上是我用到的一些库，这些根据个人不同需要安装某些库</span><br><span class="line"></span><br><span class="line">#运行到此处会自动生成一个二维码，打开手机微信，扫一扫即可登录</span><br><span class="line">itchat.login()</span><br><span class="line">friends = itchat.get_friends(update=True)[0:]</span><br><span class="line">tList = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in friends:</span><br><span class="line">#用正则表达式过滤掉 span ，class，emoji。NickName表示微信好友的昵称；</span><br><span class="line">signature = i[&quot;NickName&quot;].strip().replace(&quot;span&quot;,&quot;&quot;).replace(&quot;class&quot;,&quot;&quot;).replace(&quot;emoji&quot;,&quot;&quot;)</span><br><span class="line">rep = re.compile(&quot;1f\d.+&quot;)</span><br><span class="line">signature = rep.sub(&quot;&quot;,signature)</span><br><span class="line">print signature</span><br><span class="line">tList.append(signature)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#拼接字符串</span><br><span class="line">text = &quot;&quot;.join(tList)</span><br><span class="line"></span><br><span class="line">#jieba分词</span><br><span class="line">wordlist_jieba = jieba.cut(text,cut_all=True)</span><br><span class="line">wl_space_split = &quot; &quot;.join(wordlist_jieba)</span><br><span class="line"></span><br><span class="line">#wordcloud</span><br><span class="line">d = os.path.dirname(__file__)</span><br><span class="line">alice_coloring = np.array(Image.open(os.path.join(d,&quot;hot.png&quot;)))#设置一个背景图片，文章中会附上</span><br><span class="line">my_wordcloud = WordCloud(background_color=&quot;white&quot;,max_words=2000,mask=alice_coloring,max_font_size=37, random_state=42,</span><br><span class="line">font_path=&quot;./handan.ttf&quot;).generate(wl_space_split)</span><br><span class="line">#此处使用的字体一定是支持中文的字体，当然，如果你确定你好友的昵称都是英文，那么请忽略，字体的路径可以是相对路径，也可以是你的系统字体</span><br><span class="line"></span><br><span class="line">image_colors = ImageColorGenerator(alice_coloring)</span><br><span class="line">plt.imshow(my_wordcloud.recolor(color_func=image_colors))</span><br><span class="line">plt.imshow(my_wordcloud)</span><br><span class="line">plt.axis(&quot;off&quot;)</span><br><span class="line">plt.show()</span><br><span class="line">time.sleep(3)</span><br><span class="line">plt.close()#图片关闭后将图片发送至手机,保存图片，并发送至手机</span><br><span class="line">my_wordcloud.to_file(os.path.join(d, &quot;wechat_cloud.png&quot;))</span><br><span class="line">itchat.send_image(&quot;wechat_cloud.png&quot;, &apos;filehelper&apos;)</span><br></pre></td></tr></table></figure><p>至此，打开你的手机，进入到文件传输助手，你会收到一张图片，这就是使用微信好友昵称制作的词云，下面附上一张我本人的<br><img src="http://img.blog.csdn.net/20170721154128645?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20170721154156691?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近看到网上有人用Python获取微信的一些信息，感觉挺有意思，对于我一个Python刚入门的人来说，正需要一些代码片段来激起我的兴趣，所以自己也写了一些，废话不多说，直接上代码！！！&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="python" scheme="http://fanming.shop/categories/python/"/>
    
    
      <category term="wordcloud" scheme="http://fanming.shop/tags/wordcloud/"/>
    
  </entry>
  
  <entry>
    <title>python爬虫爬取ajax加载的动态内容</title>
    <link href="http://fanming.shop/2017/11/19/python_pachong/"/>
    <id>http://fanming.shop/2017/11/19/python_pachong/</id>
    <published>2017-11-19T15:20:00.000Z</published>
    <updated>2018-01-17T02:29:35.568Z</updated>
    
    <content type="html"><![CDATA[<p>在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，<br>经过一番百度，才发现该内容是使用ajax加载的内容：<br><img src="http://img.blog.csdn.net/20171231133004429?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="浏览器上看到的数据"></p><p><img src="http://img.blog.csdn.net/20171231133037220?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="python请求到的数据"></p><p>两处相差甚远。</p><p>最终在这里找到ajax请求的url<br><img src="http://img.blog.csdn.net/20171231133543138?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt=""></p><p>使用此地址完美请求到缺失的数据<br><img src="http://img.blog.csdn.net/20171231133956311?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQvdTAxMzU2MjYyNQ==/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="请求到一组json数据"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在使用python爬取网页内容的时候，发现请求到的内容和浏览器开发者工具上看到的不一样，&lt;br&gt;经过一番百度，才发现该内容是使用ajax加载的内容：&lt;br&gt;&lt;img src=&quot;http://img.blog.csdn.net/20171231133004429?waterm
      
    
    </summary>
    
      <category term="python" scheme="http://fanming.shop/categories/python/"/>
    
    
      <category term="python" scheme="http://fanming.shop/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>python使用爬虫获取json格式的网页，输出以及写入文件乱码</title>
    <link href="http://fanming.shop/2017/11/19/pachong_luanma/"/>
    <id>http://fanming.shop/2017/11/19/pachong_luanma/</id>
    <published>2017-11-19T14:13:00.000Z</published>
    <updated>2018-01-17T02:27:48.042Z</updated>
    
    <content type="html"><![CDATA[<p>解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">import codecs</span><br><span class="line"></span><br><span class="line">resp = requests.get(url,headers=headers)</span><br><span class="line">result = json.dumps(resp.json(),ensure_ascii=False)</span><br><span class="line">#若不指定ensure_ascii=False，输出的是中文的ascii 字符码，而不是真正的中文。</span><br><span class="line">#这是因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：</span><br><span class="line"></span><br><span class="line">file1 = codecs.open(date+&quot;liujiqian.txt&quot;,&apos;a&apos;,&apos;utf-8&apos;)</span><br><span class="line">#将获取到的内容写到文件，以指定的编码方式打开文件，这样才能正常写入中文</span><br><span class="line">file1.write(result)</span><br><span class="line">file1.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;解决python使用爬虫获取json格式的网页，输出以及写入文件乱码的情况&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;
      
    
    </summary>
    
      <category term="python" scheme="http://fanming.shop/categories/python/"/>
    
    
      <category term="scarpy" scheme="http://fanming.shop/tags/scarpy/"/>
    
  </entry>
  
  <entry>
    <title>linux中使用touch修改文件的时间</title>
    <link href="http://fanming.shop/2017/04/02/linux_touch_time/"/>
    <id>http://fanming.shop/2017/04/02/linux_touch_time/</id>
    <published>2017-04-02T11:04:11.000Z</published>
    <updated>2018-01-17T03:04:39.101Z</updated>
    
    <content type="html"><![CDATA[<h2 id="liunx中使用touch命令更改文件的时间"><a href="#liunx中使用touch命令更改文件的时间" class="headerlink" title="liunx中使用touch命令更改文件的时间"></a>liunx中使用touch命令更改文件的时间</h2><ol><li><p>首先介绍下Linux系统中文件的三个时间</p><pre><code>1）modification time (mtime,修改时间)：这个时间指的是文件内容修改的时间，而不是文件属性的修改，当数据内容修改时，这个时间就会改变，用命令ls -l默认显示的就是这个时间。2）status time （ctime,状态时间）：当一个文件的状态改变时，这个时间就会改变，例如更改了文件的权限与属性等，它就会改变。3）access time （atime,访问时间）：当读取文件内容时，就会更改这个时间，例如使用cat 去读取/etc/man.config,那么该文件的atime就会改变。</code></pre></li><li><p>touch的用法为：</p><pre><code>touch [-actmd] 文件参数：-a:仅修改access time-c:仅修改时间而不建立文件-t:后面可以接时间，格式为：[[CC]YY]MMDDhhmm [.SS]            *该参数修改的是访问时间和修改时间*       CC - 年份的前两位        YY - 年份的后两位        MM - 月份 [01-12]       DD - 日期 [01-31]       hh - 时 [00-23]       mm - 分 [00-59]       SS - 秒 [00-61]</code></pre></li></ol><pre><code>-m:仅修改mtime-d:后面可以接日期，也可以使用--date=&quot;日期或时间&quot;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;liunx中使用touch命令更改文件的时间&quot;&gt;&lt;a href=&quot;#liunx中使用touch命令更改文件的时间&quot; class=&quot;headerlink&quot; title=&quot;liunx中使用touch命令更改文件的时间&quot;&gt;&lt;/a&gt;liunx中使用touch命令更改文件的
      
    
    </summary>
    
      <category term="linux" scheme="http://fanming.shop/categories/linux/"/>
    
    
      <category term="linux" scheme="http://fanming.shop/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>centos环境下使用uwsgi&amp;nginx部署flask</title>
    <link href="http://fanming.shop/2017/03/08/%E9%83%A8%E7%BD%B2flask/"/>
    <id>http://fanming.shop/2017/03/08/部署flask/</id>
    <published>2017-03-08T07:50:23.000Z</published>
    <updated>2018-01-17T09:45:45.600Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>安装Python虚拟环境</p><pre><code>在centos中，系统已经集成了Python环境，直接可以使用，不用手动安装。    1）pip install virtualenv             进行这一步要保证pip可以使用    若在此报错gcc，则需要安装python-devel    2）virtualenv   name    ——————创建虚拟环境    3）source name/activate ————激活虚拟环境    4）根据flask项目中需要的Python包安装</code></pre></li><li><p>安装uwsgi</p><pre><code>1）pip install uwsgi2）在项目的根目录创建文件名为config.ini文件，用于启动uwsgi</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line"></span><br><span class="line">socket = 127.0.0.1:5001     //启动程序时所使用的地址和端口，通常在本地运行flask项目，</span><br><span class="line">                            //地址和端口是127.0.0.1:5000,</span><br><span class="line">                            //不过在服务器上是通过uwsgi设置端口，通过uwsgi来启动项目，</span><br><span class="line">                            //也就是说启动了uwsgi，也就启动了项目。</span><br><span class="line">chdir = /root/pyenv/AjaxExample    //项目目录</span><br><span class="line"></span><br><span class="line">wsgi-file = run.py      //flask程序的启动文件，通常在本地是通过运行  </span><br><span class="line">                        //python run.py 来启动项目的</span><br><span class="line">                        </span><br><span class="line">callable = app      //程序内启用的application变量名</span><br><span class="line"></span><br><span class="line">processes = 4     //处理器个数</span><br><span class="line"></span><br><span class="line">threads = 2     //线程个数</span><br><span class="line"></span><br><span class="line">stats = 127.0.0.1:9191      //获取uwsgi统计信息的服务地址 用于和nginx通信</span><br></pre></td></tr></table></figure></li><li><p>安装nginx</p><pre><code>   *nginx的一些命令   *启动： nginx   *停止： nginx -s -stop   *强制停止： pkill -9 nginx   *查看nginx是否应用配置文件: nginx -t   *查看版本： nginx -v1）nginx 可以使用yum直接安装        yum install yum-fastestmirror————安装源        yum install nginx2）配置nginx        配置文件默认在/etc/nginx/nginx.conf</code></pre></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;     //错误日志</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class="line">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class="line">    # for more information.</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;  //web服务端口</span><br><span class="line">        listen       [::]:80 default_server;  </span><br><span class="line">        server_name  39.106.56.137;  //公网ip</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line">        location / &#123;</span><br><span class="line">include        uwsgi_params;</span><br><span class="line">                uwsgi_pass     127.0.0.1:5001;    //需要和uwsgi的配置文件里socket项的地址</span><br><span class="line">                                                  //相同,否则无法让uwsgi接收到请求。</span><br><span class="line">                uwsgi_param UWSGI_PYHOME /root/pyenv;  //python的位置(虚拟环境下)</span><br><span class="line">                uwsgi_param UWSGI_CHDIR /root/pyenv/AjaxExample;   //项目根目录</span><br><span class="line">                uwsgi_param UWSGI_SCRIPT run:app;    //启动项目的主程序(在本地上运行</span><br><span class="line">                                                     //这个主程序可以在flask内置的</span><br><span class="line">                                                     //服务器上访问你的项目)</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> 至此，各项配置已经完成，不出意外的话，你就可以在浏览器中访问你的网站了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装Python虚拟环境&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;在centos中，系统已经集成了Python环境，直接可以使用，不用手动安装。

    1）pip install virtualenv             进行这一步要保证pip可以使用
  
      
    
    </summary>
    
      <category term="linux" scheme="http://fanming.shop/categories/linux/"/>
    
    
      <category term="flask" scheme="http://fanming.shop/tags/flask/"/>
    
  </entry>
  
</feed>
